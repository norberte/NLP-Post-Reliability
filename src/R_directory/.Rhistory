setwd("C:\Users\Norbert\PycharmProjects\NLP-Post-Reliability\src\R_directory")
setwd("C:\Users\Norbert\PycharmProjects\NLP-Post-Reliability\src\R_directory")
setwd("\Users\Norbert\PycharmProjects\NLP-Post-Reliability\src\R_directory")
setwd("C:/Users/Norbert/PycharmProjects/NLP-Post-Reliability/src/R_directory")
install.packages("syuzhet")
library("syuzhet")
install.packages("rjson")
comments <- fromJSON(file = "../../data/CleanComments.json")
library("rjson")
comments <- fromJSON(file = "../../data/CleanComments.json")
head(comments$Date)
head(comments$CreationDate)
strptime(comments$Date, "%Y-%m-%dT%H:%M:%OS")
strptime(comments$CreationDate, "%Y-%m-%dT%H:%M:%OS")
library("rjson")
comments <- fromJSON(file = "../../data/CleanComments.json")
len(comments)
size(comments)
setwd("C:/Users/Norbert/PycharmProjects/NLP-Post-Reliability/src/R_directory")
install.packages("syuzhet")
install.packages("syuzhet")
library("syuzhet")
library("rjson")
comments <- fromJSON(file = "../../data/CleanComments.json")
library(rjson)
setwd("C:/Users/Norbert/PycharmProjects/NLP-Post-Reliability/src/R_directory")
my.JSON <- fromJSON(file="../../data/CleanComments.json")
remove(comments)
comments_df <- lapply(my.JSON, function(play) # Loop through each "play"
{
# Convert each group to a data frame.
# This assumes you have 6 elements each time
data.frame(matrix(unlist(play), ncol=9, byrow=T))
})
comments_df <- do.call(rbind, df)
comments_df <- do.call(rbind, comments_df)
colnames(comments_df) <- names(my.JSON[[1]][[1]])
rownames(comments_df) <- NULL
library(jsonlite)
data <- fromJSON(file="../../data/CleanComments.json")
data <- fromJSON(txt="../../data/CleanComments.json")
library(jsonlite)
comments_df <- fromJSON(txt="../../data/CleanComments.json")
library(jsonlite)
comments_df <- fromJSON(txt="../../data/CleanComments.json")
library(jsonlite)
comments_df <- fromJSON(txt="../../data/CleanComments.json")
library(jsonlite)
comments_df <- fromJSON(txt="../../data/CleanComments.json")
head(comments_df$data)
if (!require("devtools")) install.packages("devtools")
library(devtools)
install_github("mkuhn/dict")
install.packages("devtools")
install.packages("devtools")
install.packages("C:/Users/Norbert/Desktop/Downloads/dict-master.zip", repos = NULL, type = "win.binary")
library(dict)
library(dict-master)
library("dict-master")
install.packages("pkgbuild")
install.packages("Container")
install.packages("container")
library(container)
ages <- Dict$new(9 = comments_df$data$clean_text[0])
ages <- Dict$new(c(9 = comments_df$data$clean_text[0], 9 = comments_df$data$clean_text[1], 9 = comments_df$data$clean_text[2]))
ages <- Dict$new(c(9 = c(comments_df$data$clean_text[0], comments_df$data$clean_text[1], comments_df$data$clean_text[2])))
ages <- Dict$new(c(9 = c(comments_df$data$clean_text[0], comments_df$data$clean_text[1], comments_df$data$clean_text[2])))
ages <- Dict$new(c("Jim" = comments_df$data$clean_text[0], comments_df$data$clean_text[1], comments_df$data$clean_text[2])))
ages <- Dict$new(c("Jim" = comments_df$data$clean_text[0], "Jim" = comments_df$data$clean_text[1], "Jim" = comments_df$data$clean_text[2])))
library(sqldf)
install.packages("sqldf")
h <- hash()
library(hash)
install.packages("hash")
library(hash)
library("syuzhet")
library(jsonlite)
library(sqldf)
h <- hash()
apply(comments_df$data, 1, function(x) {
h[[x$PostId]] <- sqldf("select clean_text from comments_df$data where PostId=" + x$PostId + "")
})
apply(comments_df$data, 1, function(x) {
h[[x[3]]] <- sqldf("select clean_text from comments_df$data where PostId=" + x[3] + "")
})
comments_df$data[3]
apply(comments_df$data, 1, function(x) {
h[[x[3,]]] <- sqldf("select clean_text from comments_df$data where PostId=" + x[3,] + "")
})
comments_df$data[,3]
comments_df$data[1,3]
apply(comments_df$data, 1, function(x) {
h[[x[3]]] <- sqldf("select clean_text from comments_df$data where PostId=" + x[3] + "")
})
apply(comments_df$data, 1, function(x) {
h[[x[3]]] <- sqldf("select clean_text from comments_df$data where PostId=" + as.character(x[3]) + "")
})
apply(comments_df$data, 1, function(x) {
h[[x[3]]] <- sqldf(paste("select clean_text from comments_df$data where PostId=",as.character(x[3]),""))
})
library(plyr)
h <- hash()
mdply(as.comments_df$data, 1, function(x) {
h[[x[3]]] <- sqldf(paste("select clean_text from comments_df$data where PostId=",as.character(x[3]),""))
})
mdply(comments_df$data, 1, function(x) {
h[[x[3]]] <- sqldf(paste("select clean_text from comments_df$data where PostId=",as.character(x[3]),""))
})
apply(as.data.frame(comments_df$data), 1, function(x) {
h[[x[3]]] <- sqldf(paste("select clean_text from comments_df$data where PostId=",as.character(x[3]),""))
})
x = sqldf("select clean_text from comments_df$data where PostId=9")
table <- comments_df$data
x = sqldf("select clean_text from table where PostId=9")
t <- comments_df$data
remove(table)
rm(table)
x = sqldf("select clean_text from t where PostId=9")
x
h <- hash()
apply(as.data.frame(comments_df$data), 1, function(x) {
h[[x[3]]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x[3]),""))
})
unique_post_IDs <- rapply(t,function(x) unique(x[3]))
unique_post_IDs <- rapply(t,function(x) unique(x[3]))
unique_post_IDs <- rapply(t$PostId, function(x) unique(x))
unique_postIDs <- rapply(as.list(t$PostId), function(x) unique(x))
o
unique_postIDs <- unique(t$PostId)
rm(unique_post_IDs)
h <- hash()
apply(unique_postIDs, 1, function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
apply(unique_postIDs, function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
lapply(unique_postIDs, function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
lapply(x = unique_postIDs, FUN = function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
lapply(X = unique_postIDs, FUN = function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
lapply(X = as.vector(unique_postIDs), FUN = function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
lapply(X = as.list(unique_postIDs), FUN = function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
head(unique_postIDs)
class(unique_postIDs)
lapply(unique_postIDs, function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
sapply(unique_postIDs, function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
sapply(as.vector(unique_postIDs), function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
sapply(as.list(unique_postIDs), function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
class(as.vector(unique_postIDs))
sapply(unique_postIDs, function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
lapply(unique_postIDs, function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
lapply(unique(t$PostId), function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
rapply(unique_postIDs, function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
rapply(as.list(unique_postIDs), function(x) {
h[[x]] <- sqldf(paste("select clean_text from t where PostId=",as.character(x),""))
})
length(unique_postIDs)
h <- hash()
for (id in 1:length(unique_postIDs)){
h[[id]] <- sqldf(paste("select clean_text from t where PostId=",as.character(id),""))
}
sqldf(paste("select clean_text from t where PostId=",as.character(id),""))
sqldf("select clean_text from t where PostId=9")
for (id in 1:length(unique_postIDs)){
h[[id]] <- as.list(sqldf(paste("select clean_text from t where PostId=",as.character(id),"")))
}
for (id in 1:length(unique_postIDs)){
h[[id]] <- c(sqldf(paste("select clean_text from t where PostId=",as.character(id),"")))
}
